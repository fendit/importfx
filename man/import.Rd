% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import.R
\name{import}
\alias{import}
\alias{importfunctions}
\title{Import Specific User-Defined Functions from Another R Script}
\usage{
import(from = "", only = NULL, except = NULL, envir = parent.frame())
}
\arguments{
\item{only}{Functions to be imported. Default is \code{NULL}.}

\item{except}{Functions that are excluded when importing. Default is \code{NULL}.}

\item{envir}{Environment where functions are imported to. See 'Details'.}

\item{file}{Directory of R script that stores all user-defined functions.}
}
\value{
User-defined functions from another R script
}
\description{
Import functions from a R script based on user's preference (which function(s) are included or excluded when importing).
}
\details{
Either \code{only} or \code{except} can contain values (names of functions to be imported or not) when importing.

Default value of \code{envir} is \code{\link[base]{parent.frame}}, which is the environment \code{import} was made.
}
\examples{
\dontrun{
# Suppose there is a .R file (functions.R) that contains functions (foo1, foo2 and foo3):
file.create("functions.R")
writeLines(text = "foo1 <- function(){}\nfoo2 <- function(){}\nfoo3 <- function(){}",
           con = file("functions.R")
)
close(file("functions.R"))

# Import all functions in functions.R
import(from = "functions.R")
ls.str()  # Print what exists in Global Environment
# Import specific functions via functions.R (foo1 and foo3)
import(from = "functions.R", only = c("foo1", "foo3"))
ls.str()  # Print what exists in Global Environment
# Import all functions in functions.R except foo1 and foo3
import(from = "functions.R", except = c("foo1", "foo3"))
ls.str()  # Print what exists in Global Environment
# Running the following code shows an error message as function(s) imported do not exist
import(from = "functions.R", only = c("foo1", "foo03"))
# Error: foo03 could not be found in functions.R

ls.str()  # Print what exists in Global Environment
# Note: despite `foo1` is in functions.R, it is not imported in Global Environment via above command
}

}
\author{
Fendi Tsim (F.Tsim at wbs.ac.uk)
}
